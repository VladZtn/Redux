{"ast":null,"code":"import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { applyMiddleware, createStore } from 'redux';\nimport { asyncIncrement, changeTheme, decrement, increment } from './redux/actions';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './redux/rootReducer';\nimport './styles.css';\nconst counter = document.getElementById('counter');\nconst addBtn = document.getElementById('add');\nconst subBtn = document.getElementById('sub');\nconst asyncBtn = document.getElementById('async');\nconst themeBtn = document.getElementById('theme');\n\n// function logger(state) {\n//     return function(next) {\n//         return function(action) {\n//             return next(action)\n//         }\n//     }\n// }\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, logger)));\naddBtn.addEventListener('click', () => {\n  store.dispatch(increment());\n});\nsubBtn.addEventListener('click', () => {\n  store.dispatch(decrement());\n});\nasyncBtn.addEventListener('click', () => {\n  store.dispatch(asyncIncrement());\n});\nthemeBtn.addEventListener('click', () => {\n  const newTheme = document.body.classList.contains('light') ? 'dark' : 'light';\n  store.dispatch(changeTheme(newTheme));\n});\nstore.subscribe(() => {\n  const state = store.getState();\n  counter.textContent = state.counter;\n  document.body.className = state.theme.value;\n  [addBtn, subBtn, themeBtn, asyncBtn].forEach(btn => {\n    btn.disabled = state.theme.disabled;\n  });\n});\nstore.dispatch({\n  type: 'INIT_APPLICATION'\n});","map":{"version":3,"names":["thunk","logger","applyMiddleware","createStore","asyncIncrement","changeTheme","decrement","increment","composeWithDevTools","rootReducer","counter","document","getElementById","addBtn","subBtn","asyncBtn","themeBtn","store","addEventListener","dispatch","newTheme","body","classList","contains","subscribe","state","getState","textContent","className","theme","value","forEach","btn","disabled","type"],"sources":["/Users/vladzolotonosha/Desktop/redux/src/index.js"],"sourcesContent":["import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { applyMiddleware, createStore } from 'redux';\nimport { asyncIncrement, changeTheme, decrement, increment } from './redux/actions';\nimport {composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './redux/rootReducer';\n\nimport './styles.css';\n\nconst counter = document.getElementById('counter');\nconst addBtn = document.getElementById('add');\nconst subBtn = document.getElementById('sub');\nconst asyncBtn = document.getElementById('async');\nconst themeBtn = document.getElementById('theme');\n\n// function logger(state) {\n//     return function(next) {\n//         return function(action) {\n//             return next(action)\n//         }\n//     }\n// }\n\nconst store = createStore(\n    rootReducer, \n    composeWithDevTools(\n        applyMiddleware(thunk, logger),\n    )\n);\n\n\naddBtn.addEventListener('click', () => {\n    store.dispatch(increment());\n});\n\nsubBtn.addEventListener('click', () => {\n    store.dispatch(decrement());\n});\n\nasyncBtn.addEventListener('click', () => {\n    store.dispatch(asyncIncrement());\n});\n\nthemeBtn.addEventListener('click', () => {\n    const newTheme = document.body.classList.contains('light') ? 'dark' : 'light';\n    store.dispatch(changeTheme(newTheme));\n});\n\n\nstore.subscribe(() => {\n    const state = store.getState();\n\n    counter.textContent = state.counter;\n    document.body.className = state.theme.value;\n\n    [addBtn, subBtn, themeBtn, asyncBtn].forEach(btn => {\n        btn.disabled = state.theme.disabled;\n    });\n});\n\n\nstore.dispatch({type: 'INIT_APPLICATION'});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,cAAc,EAAEC,WAAW,EAAEC,SAAS,EAAEC,SAAS,QAAQ,iBAAiB;AACnF,SAAQC,mBAAmB,QAAQ,0BAA0B;AAC7D,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,OAAO,cAAc;AAErB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAClD,MAAMC,MAAM,GAAGF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAC7C,MAAME,MAAM,GAAGH,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAC7C,MAAMG,QAAQ,GAAGJ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;AACjD,MAAMI,QAAQ,GAAGL,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,KAAK,GAAGd,WAAW,CACrBM,WAAW,EACXD,mBAAmB,CACfN,eAAe,CAACF,KAAK,EAAEC,MAAM,CACjC,CACJ,CAAC;AAGDY,MAAM,CAACK,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACnCD,KAAK,CAACE,QAAQ,CAACZ,SAAS,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEFO,MAAM,CAACI,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACnCD,KAAK,CAACE,QAAQ,CAACb,SAAS,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEFS,QAAQ,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACrCD,KAAK,CAACE,QAAQ,CAACf,cAAc,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC;AAEFY,QAAQ,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACrC,MAAME,QAAQ,GAAGT,QAAQ,CAACU,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,MAAM,GAAG,OAAO;EAC7EN,KAAK,CAACE,QAAQ,CAACd,WAAW,CAACe,QAAQ,CAAC,CAAC;AACzC,CAAC,CAAC;AAGFH,KAAK,CAACO,SAAS,CAAC,MAAM;EAClB,MAAMC,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;EAE9BhB,OAAO,CAACiB,WAAW,GAAGF,KAAK,CAACf,OAAO;EACnCC,QAAQ,CAACU,IAAI,CAACO,SAAS,GAAGH,KAAK,CAACI,KAAK,CAACC,KAAK;EAE3C,CAACjB,MAAM,EAAEC,MAAM,EAAEE,QAAQ,EAAED,QAAQ,CAAC,CAACgB,OAAO,CAACC,GAAG,IAAI;IAChDA,GAAG,CAACC,QAAQ,GAAGR,KAAK,CAACI,KAAK,CAACI,QAAQ;EACvC,CAAC,CAAC;AACN,CAAC,CAAC;AAGFhB,KAAK,CAACE,QAAQ,CAAC;EAACe,IAAI,EAAE;AAAkB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}