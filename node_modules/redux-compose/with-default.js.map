{"version":3,"sources":["with-default.ts"],"names":["withDefault","defaultState","reducer","s","state","action"],"mappings":";;;;;;;AAEA;;;;;;;;;;AAUO,MAAMA,WAAW,GAAG,CACzBC,YADyB,EAEzBC,OAAsB,GAAGC,CAAC,IAAIA,CAFL,KAGoB,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAC7CH,OAAO,CAACE,KAAD,EAAQC,MAAR,CAJF","sourcesContent":["import { AnyAction, Reducer } from './redux';\n\n/**\n * Given a default state and reducer return a reducer that uses the default\n * state when the store is uninitialized.\n *\n * If no reducer is provided a reducer which just returns its input state unmodified\n * is used.\n *\n * @param defaultState The default state to use if the state of the store is undefined\n * @param reducer The reducer to invoke, if undefined the state will be returned as-is\n */\nexport const withDefault = <S, A extends AnyAction = AnyAction>(\n  defaultState: S,\n  reducer: Reducer<S, A> = s => s\n): ((state: S | undefined, action: A) => S) => (state = defaultState, action) =>\n  reducer(state, action);\n"],"file":"with-default.js"}